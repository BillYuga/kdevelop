- [DONE] Correct signal handling commands for lldb
- [DONE] Correct environment variable setting commands for lldb

- [DONE] File bug to lldb-mi that interpreter-exec not properly prefix console output by '~'
    + In MICmdCmdMiscellanous.cpp:CMICmdCmdInterpreterExec::Acknowledge()

- [DONE] Port DebugJob
- [DONE] Port exam core and attach process to KJob
- [DONE] Move DebuggerPlugin to MIDebuggerPlugin

- [DONE] Verify how unit test works in test_gdb
- [DONE] Create minimal unit test cases to be able to test debugger and debugsession
    + [DONE] can break on start
    + [DONE] environment var successfully set
    + Check if environment-cd works in remote debugging
    + Check if lldb supports unicode correctly
        * a program output in encoding other than utf8 and different from host system default

- [DONE] Verify MIParser/MILexer can handle output without any stream prefix: no they can't

- Make config options in config page actually working

- Clean up tool views
    * debugger console
    * disassembly widget
    * register views
        + controller
        + tool view

- Remove duplicate breakpoint: look at breakpointController()->setDeleteDuplicateBreakpoints(true)

- Handle error sometime with Command 'exec-run'. Invalid process during debug session.

- An unified way to report error

- File bug to lldb-mi
    * HIGH PRIORITY: -break-insert
        + pending breakpoints set with '-f' not got resolved after file loaded
            - fix is simple from lldb-mi side but quite difficult from kdevelop side.
              maybe should write the patch myself
        + pending breakpoints '-f' can only be last flag switch
        + create disabled breakpoint with '-d' not working when combined with '-f'
    * HIGH PRIORITY: lldb-mi creashes when there are multiple threads when break
        + terminate called after throwing an instance of 'std::logic_error'
            what():  basic_string::_M_construct null not valid
    * breakpoint hit doesn't generate corresponding breakpoint-modified notification
      (needed to update hitCount)
    * -break-watch command not supported
        + use raw cli command 'break set var' doesn't provides MI response
    * when hit watch point, nothing is output, which confuses the controller
    * thread-info returns malformated result
        + there should be only one 'frame' key for each thread in the list
        + there shoule be a current-thread-id field (fixed at least in revision 265858)
    * var-update doesn't support * as variable name
    * can't have space in environment cd
    * -inferior-tty-set only has dummy implementation
    * 'process launch' doesn't provide thread-group-started notification
    * File bug to lldb-mi for other missing commands

- Data formatter for lldb
    * if this works in MI?
    * print static member?
- Disasembly format string
    * implement asm-demangle?
- Fix other missing commands by using cli commands
- Fix TODOs in files

- Change test_gdb to avoid direct use of QTest::qWait, which starts event loop, and could cause session to
  be deleted. Use WAIT_FOR_STATE_AND_IDLE(session, <previous state>) instead. Or use QPointer for session.

- Known issues
    * Remote debugging
        + When using 'lldb-server gdbserver' as remote server, server exits once debug session ended.
        + When using 'gdbserver' as remote server
            - Remote work path can't contain space
            - Can't actually start inferior
    * Breakpoints
        + Pending breakpoints doesn't work, which also causes break on start not function
            - Can still manually set pending breakpoints
        + Breakpoint hit count is not updated timely (limitation in lldb-mi)
        + No watchpoint support
            - Can still manually add watch point
    * Threads
        + lldb-mi crashes when break on a point where multiple threads running. (Fixed in latest lldb trunk version)

relavent lldb settings:

disassembly-format
thread-format
frame-format

target
    run-args
    env-vars
    inherit-env

    x86-disassembly-flavor

    use-hex-immediates
    hex-immediate-style
